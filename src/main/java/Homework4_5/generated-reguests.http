# Выводим всех студентов из базы данных
GET http://localhost:8080/student/byAll
###
# Выводим студента из базы данных по возрасту 15 лет
GET http://localhost:8080/student/byAge?age=15
###
# Выводим студентов из базы данных по возрасту от мин и макс
GET http://localhost:8080/student/byAgeBetween?min=15&max=19
###
# Вводим изменнения студента в базу данных
PUT http://localhost:8080/student
Content-Type: application/json

{
"id": 1,
"name": "Максим",
"age": 20,
  "faculty": {
    "id": 1,
    "name": "Информатика",
    "color": "Красный"
  }
}
###
# Вводим студента в базу данных
POST http://localhost:8080/student
Content-Type: application/json

{
  "name": "артем",
  "age": 21,
  "faculty": {
    "id": 3,
    "name": "Философия",
    "color": "Красный"
  }
 }
###
# Выводим студента из базы данных по ID
GET http://localhost:8080/student/3
###
# Выводим все факультеты из базы данных
GET http://localhost:8080/faculty/byAll
###
# Вводим изменнения факультета в базу данных
PUT http://localhost:8080/faculty
Content-Type: application/json

{
  "id": 1,
  "name": "Философия",
  "color": "Красный"
}
###
# Вводим Факультет в базу данных
POST http://localhost:8080/faculty
Content-Type: application/json

{
  "name": "Философия",
  "color": "Красный"
}
###
# Выводим факультет из базы данных по ID
GET http://localhost:8080/faculty/4
###
# Выводим факультет из базы данных по названию или цвету
GET http://localhost:8080/faculty/byNameOrColor?name=ФизМат&color=красный
###
# Выводим всех студентов придлежащих факультету из базы данных по ID - факультета
GET http://localhost:8080/student/byFaculty/1
###
# Выводим всех студентов придлежащих факультету из базы данных по ID - факультета
GET http://localhost:8080/faculty/1/students
###
# Выводим всех студентов придлежащих факультету из базы данных по названию факультета
GET http://localhost:8080/faculty/философия/studentsOfFaculty
###
# Эти запросы с файлами делаются Postman или Swagger или в другом опроснике
# Вводим файл (аватар) студента 1 - ID,  в базу данных
POST http://localhost:8080/avatar/1
###
# Выводим файл (аватар) студента 1 - ID, из базы данных
GET http://localhost:8080/avatar/1
###
DELETE http://localhost:8080/student/449
###
# Возвращает количество строк в таблице студентов
GET http://localhost:8080/student/totalCount
###
# Возвращает среднее значение лет в таблице студентов
GET http://localhost:8080/student/averageAge
###
# Возвращает количество студентов начиная с последнего
GET http://localhost:8080/student/lastStudents/8
###
#Возвращает имена студентов начинающиеся на букву А в отсортированном виде6
GET http://localhost:8080/student/studentsFirstLetterA
###
#Возвращает средний возраст всех студентов
GET http://localhost:8080/student/averageAgeStudentWithStreams
###
#Возвращает самое длинное название факультета
GET http://localhost:8080/faculty/longestFacultyName
###
#Выполняется четвертое задание со стримом 1_000_000 (a, b) -> a + b)
GET http://localhost:8080/info/getIntegerValue
###